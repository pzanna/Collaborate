# Enhanced Development Configuration
# Balances security with development productivity
#
# Usage: docker-compose -f docker-compose.dev-enhanced.yml up -d
#
# This configuration provides:
# - Moderate resource limits (higher than production)
# - Some security enhancements (no privilege escalation)
# - Writable filesystems for development workflow
# - Enhanced logging and debugging capabilities

version: "3.8"

networks:
  eunice-microservices:
    driver: bridge

services:
  # Enhanced development services with moderate security

  # API Gateway with development-friendly security
  api-gateway:
    build: ./services/api-gateway
    container_name: eunice-api-gateway
    ports:
      - "8000:8000"
    environment:
      - MCP_SERVER_URL=ws://mcp-server:9000
      - LOG_LEVEL=DEBUG # Enhanced logging for development
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    networks:
      - eunice-microservices
    depends_on:
      - mcp-server
    restart: unless-stopped
    # Moderate resource limits - higher than production
    deploy:
      resources:
        limits:
          cpus: "2.0" # More CPU for development
          memory: 1G # More memory for development
        reservations:
          cpus: "0.2"
          memory: 256M
    # Basic security - no privilege escalation but writable filesystem
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s # Faster health checks for development
      timeout: 5s
      retries: 3
      start_period: 10s

  # MCP Server with development enhancements
  mcp-server:
    build: ./services/mcp-server
    container_name: eunice-mcp-server
    ports:
      - "9000:9000"
    environment:
      - LOG_LEVEL=DEBUG
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    networks:
      - eunice-microservices
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.2"
          memory: 256M
    security_opt:
      - no-new-privileges:true
    # Development-friendly volumes for hot reloading
    volumes:
      - ./services/mcp-server:/app:ro # Read-only source mount
      - /app/logs # Writable logs directory
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import socket; s = socket.socket(); s.connect(('localhost', 9000)); s.close()",
        ]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Database with development optimizations
  postgres:
    image: postgres:15-alpine
    container_name: eunice-postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=eunice
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_LOG_STATEMENT=all # Enhanced logging for development
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - eunice-microservices
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 20s
      timeout: 5s
      retries: 3

volumes:
  postgres-data:
    driver: local
