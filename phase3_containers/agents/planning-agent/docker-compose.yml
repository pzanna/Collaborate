version: "3.8"

services:
  integrated-planning-agent:
    build: .
    environment:
      - AGENT_ID=integrated-planning-agent-001
      - AGENT_TYPE=planning
      - MCP_SERVER_URL=ws://mcp-server:9000
      - PYTHONPATH=/app
    volumes:
      - ./logs:/app/logs
      - ./../../src:/app/src # Mount the source code
      - ./../../config:/app/config # Mount configuration
    depends_on:
      - mcp-server
    networks:
      - eunice-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "health_check.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Include MCP Server and dependencies for testing
  mcp-server:
    build: ../mcp-server
    environment:
      - POSTGRES_URL=postgresql://eunice:eunice_pass@postgres:5432/eunice_mcp
      - REDIS_URL=redis://redis:6379/0
      - SERVER_PORT=9000
      - ALLOWED_AGENT_TYPES=literature_search,planning,executor,memory
    ports:
      - "9000:9000"
    depends_on:
      - postgres
      - redis
    networks:
      - eunice-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "health_check.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=eunice_mcp
      - POSTGRES_USER=eunice
      - POSTGRES_PASSWORD=eunice_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - eunice-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eunice -d eunice_mcp"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    networks:
      - eunice-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  eunice-network:
    driver: bridge
