# Enhanced Security Docker Compose Configuration
# Security-hardened deployment with Alpine-based containers

version: "3.8"

services:
  # Core Services with Security Hardening

  # 1. API Gateway Service (Port 8001) - Security Enhanced
  api-gateway:
    build: ./services/api-gateway
    container_name: eunice-api-gateway
    ports:
      - "8001:8001"
    environment:
      - HOST=0.0.0.0
      - PORT=8001
      - MCP_SERVER_HOST=mcp-server
      - MCP_SERVER_PORT=9000
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/eunice
      - LOG_LEVEL=INFO
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - mcp-server
      - postgres
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.2"
          memory: 256M
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=200m
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # 2. Enhanced MCP Server Service (Port 9000) - Security Enhanced
  mcp-server:
    build: eunice/mcp-server:alpine-secure
    container_name: eunice-mcp-server
    ports:
      - "9000:9000"
    environment:
      - LOG_LEVEL=INFO
      - PORT=9000
      - HOST=0.0.0.0
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/eunice
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.2"
          memory: 256M
    # Security: Read-only root filesystem with writable temp dirs
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=200m
      - /app/logs:noexec,nosuid,size=100m
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import socket; s = socket.socket(); s.connect(('localhost', 9000)); s.close()",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # 3. AI Service (MCP Client) - Security Enhanced
  ai-service:
    build: ./services/ai-service
    container_name: eunice-ai-service
    environment:
      - MCP_SERVER_URL=ws://mcp-server:9000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - XAI_API_KEY=${XAI_API_KEY}
      - LOG_LEVEL=INFO
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - mcp-server
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=100m
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true

  # All Agent Services with Enhanced Security

  # 4. Planning Agent (Port 8007) - Security Enhanced
  planning-agent:
    build: ./agents/planning
    container_name: eunice-planning-agent
    ports:
      - "8007:8007"
    environment:
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8007
      - MCP_SERVER_URL=ws://mcp-server:9000
      - AGENT_TYPE=planning
      - LOG_LEVEL=INFO
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - mcp-server
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=100m
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # 5. Research Manager Agent (Port 8002) - Security Enhanced
  research-manager-agent:
    build: ./agents/research-manager
    container_name: eunice-research-manager
    ports:
      - "8002:8002"
    environment:
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8002
      - MCP_SERVER_URL=ws://mcp-server:9000
      - AGENT_TYPE=research_manager
      - LOG_LEVEL=INFO
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - mcp-server
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=100m
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # 6. Literature Search Agent (Port 8003) - Security Enhanced
  literature-agent:
    build: ./agents/literature
    container_name: eunice-literature-agent
    ports:
      - "8003:8003"
    environment:
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8003
      - MCP_SERVER_URL=ws://mcp-server:9000
      - AGENT_TYPE=literature
      - LOG_LEVEL=INFO
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - mcp-server
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=100m
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # 7. Screening PRISMA Agent (Port 8004) - Security Enhanced
  screening-agent:
    build: ./agents/screening
    container_name: eunice-screening-agent
    ports:
      - "8004:8004"
    environment:
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8004
      - MCP_SERVER_URL=ws://mcp-server:9000
      - AGENT_TYPE=screening
      - LOG_LEVEL=INFO
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - mcp-server
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=100m
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # 8. Database Agent (Port 8011) - Security Enhanced
  database-agent:
    build: ./agents/database
    container_name: eunice-database-agent
    ports:
      - "8011:8011"
    environment:
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8011
      - MCP_SERVER_URL=ws://mcp-server:9000
      - AGENT_TYPE=database
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/eunice
      - LOG_LEVEL=INFO
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - mcp-server
      - postgres
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=100m
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8011/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # 9. Executor Agent (Port 8008) - Security Enhanced
  executor-agent:
    build: ./agents/executor
    container_name: eunice-executor-agent
    ports:
      - "8008:8008"
    environment:
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8008
      - MCP_SERVER_URL=ws://mcp-server:9000
      - AGENT_TYPE=executor
      - LOG_LEVEL=INFO
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - mcp-server
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=100m,uid=1000,gid=1000
      - /app/work:noexec,nosuid,size=100m,uid=1000,gid=1000
      - /tmp:noexec,nosuid,size=50m,uid=1000,gid=1000
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # 10. Memory Agent Service (Port 8009) - Security Enhanced
  memory-agent:
    build: ./agents/memory
    container_name: eunice-memory-agent
    ports:
      - "8009:8009"
    environment:
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8009
      - MCP_SERVER_URL=ws://mcp-server:9000
      - AGENT_TYPE=memory
      - LOG_LEVEL=INFO
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - mcp-server
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=100m,uid=1000,gid=1000
      - /app/data:noexec,nosuid,size=200m,uid=1000,gid=1000
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8009/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # 11. Database Service - Security Enhanced
  database-service:
    build: ./services/database
    container_name: eunice-database
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/eunice
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - HEALTH_CHECK_INTERVAL=30
      - MAINTENANCE_INTERVAL=3600
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONNOUSERSITE=1
    networks:
      - eunice-microservices
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /app/tmp:noexec,nosuid,size=100m
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true

  # Supporting Infrastructure with Security

  # Redis (Message Broker & Cache) - Security Enhanced
  redis:
    image: redis:7-alpine
    container_name: eunice-redis
    ports:
      - "6380:6379"
    networks:
      - eunice-microservices
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 64M
    # Security: Drop unnecessary capabilities
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database - Security Enhanced
  postgres:
    image: postgres:15-alpine
    container_name: eunice-postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=eunice
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - eunice-microservices
    restart: unless-stopped
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.2"
          memory: 256M
    # Security: Drop unnecessary capabilities
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
      - CHOWN
      - DAC_OVERRIDE
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (Load Balancer/Reverse Proxy + Frontend) - Security Enhanced
  nginx:
    image: nginx:alpine
    container_name: eunice-nginx
    ports:
      - "80:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    networks:
      - eunice-microservices
    depends_on:
      - api-gateway
    restart: unless-stopped
    profiles:
      - production
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 64M
    # Security: Drop unnecessary capabilities
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
    # Security: Prevent privilege escalation
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3

# Networks
networks:
  eunice-microservices:
    driver: bridge
    name: eunice-microservices
    labels:
      - "com.eunice.network=microservices"
      - "com.eunice.version=v0.3-secure"

# Volumes
volumes:
  postgres-data:
    name: eunice-postgres-data
    labels:
      - "com.eunice.volume=database"
